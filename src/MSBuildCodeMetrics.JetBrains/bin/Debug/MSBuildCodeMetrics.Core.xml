<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MSBuildCodeMetrics.Core</name>
    </assembly>
    <members>
        <member name="T:MSBuildCodeMetrics.Core.CodeMetricsRunner">
            <summary>
            This class is responsible for running all metrics computations.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.#ctor(MSBuildCodeMetrics.Core.ILogger)">
            <summary>
            Creates a new CodeMetricsRunner
            </summary>
            <param name="logger">The logger</param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.RegisterProvider(MSBuildCodeMetrics.Core.ICodeMetricsProvider)">
            <summary>
            Register a new provider to this runner
            </summary>
            <param name="provider">Provider</param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.GetProvider(System.String)">
            <summary>
            Get a registered provider by his name
            </summary>
            <param name="name">Name</param>
            <returns>The provider</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.IsMetricRegistered(System.String,System.String)">
            <summary>
            Checks if the specified provider can compute the metric
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <returns>true if can compute</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.ComputeMetrics(System.Collections.Generic.IEnumerable{MSBuildCodeMetrics.Core.ComputeMetricsParameter})">
            <summary>
            Compute the metrics using the specified parameters
            </summary>
            <param name="parameters">Input parameter for metrics calculation</param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.GetMeasuresByProvider(System.String)">
            <summary>
            Gets the measures generated by the specified provider
            </summary>
            <param name="providerName">Provider name</param>
            <returns>A set of measures</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.GenerateReport(System.Collections.Generic.List{MSBuildCodeMetrics.Core.Metric},System.Boolean,System.Boolean)">
            <summary>
            Generates the report with the specified parameters
            </summary>
            <param name="metricList">List of metrics to include in the report</param>
            <param name="summary">Specify if the summary report should be generated</param>
            <param name="details">Specify if the details report should be generated</param>
            <returns>the generated report</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.CodeMetricsRunner.GetDetailedReport(System.String,System.String)">
            <summary>
            Returns the computed metrics for provider and metric name, ordered by value descending
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <returns>a set of runner measures</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ComputeMetricsParameter">
            <summary>
            This class represents the input parameters for each metric computation. Since each metric can have it's own
            files, this is the way the input parameters are passed in the moment of the metrics computation.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ComputeMetricsParameter.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new ComputeMetricsParameter for the specified provider, metric and files.
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <param name="files">Files</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ComputeMetricsParameter.ProviderName">
            <summary>
            The provider name
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ComputeMetricsParameter.MetricName">
            <summary>
            Metric name
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ComputeMetricsParameter.Files">
            <summary>
            List of files to compute metrics from
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ComputeMetricsParameterList">
            <summary>
            This class is just a builder for List&lt;ComputeMetricsParameter&gt;. Syntax sugar.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ComputeMetricsParameterList.Create">
            <summary>
            Creates a new ComputeMetricsParameterList and returns its reference
            </summary>
            <returns>The new ComputeMetricsParameterList</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ComputeMetricsParameterList.Add(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates and adds a new ComputeMetricsParameter to the list
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <param name="files">Files</param>
            <returns>The compute metrics parameter list</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ListExtensions">
            <summary>
            This is a builder for generic List&lt;T&gt;. Syntax sugar.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ListExtensions.AddItem``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Adds an item to the list and returns the list pointer
            </summary>
            <typeparam name="T">The list type</typeparam>
            <param name="list">The list</param>
            <param name="value">Value to add in the list</param>
            <returns>the list</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.FileStreamFactory">
            <summary>
            This class is a File Stream implementation for FileStreamFactory. It is the default implementation for the providers.
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.IFileStreamFactory">
            <summary>
            This interface is used for dependency inversion. It helps the testability of the task. 
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.IFileStreamFactory.CreateStream(System.String)">
            <summary>
            Creates a new stream for the specified file name
            </summary>
            <param name="fileName">The name of the file to create the stream</param>
            <returns>The new stream</returns>		
        </member>
        <member name="M:MSBuildCodeMetrics.Core.IFileStreamFactory.CloseStream(System.IO.Stream)">
            <summary>
            Close the stream
            </summary>
            <param name="stream">Stream to close</param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.IFileStreamFactory.OpenFile(System.String)">
            <summary>
            Open the file and return the associated file stream.
            </summary>
            <param name="fileName">The file name</param>
            <returns>The stream</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.FileStreamFactory.CreateStream(System.String)">
            <summary>
            Creates a new file stream, associated with a new file
            </summary>
            <param name="fileName">file name</param>
            <returns>The new stream</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.FileStreamFactory.CloseStream(System.IO.Stream)">
            <summary>
            Closes the specified stream
            </summary>
            <param name="outputReportStream">The stream</param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.FileStreamFactory.OpenFile(System.String)">
            <summary>
            Open the specified existing file, for read.
            </summary>
            <param name="fileName">The file</param>
            <returns>Stream</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ICodeMetricsProvider">
            <summary>
            This is the most important interface for MSBuildCodeMetrics. Each new provider must implement this interface. There's also the
            ISingleFileCodeMetricsProvider and IMultiFileCodeMetricsProvider that extends this interface behavior.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ICodeMetricsProvider.GetMetrics">
            <summary>
            Returns the metrics that the provider knows how to compute.
            </summary>
            <returns>A set of metrics</returns>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ICodeMetricsProvider.Name">
            <summary>
            Name of the provider
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ILoggableCodeMetricsProvider">
            <summary>
            This interface must be implemented for each provider that needs to log its activity. 
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ILoggableCodeMetricsProvider.Logger">
            <summary>
            This method is called from CodeMetricsRunner to send the logger to the providers.
            </summary>	    
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ILogger">
            <summary>
            This interface is used to allow providers to log its activity. 
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ILogger.LogMessage(System.String)">
            <summary>
            This method is used for log a message. It's used only for non-fatal errors or non-standard conditions.
            </summary>
            <param name="msg">The message</param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ILogger.LogError(System.String)">
            <summary>
            This method is used to log fatal errors.
            </summary>
            <param name="error">The error</param>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.IMetadataHandler">
            <summary>
            This interface should be implemented for providers that needs metadata. 
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.IMetadataHandler.AddMetadata(System.String,System.String)">
            <summary>
            This method is called from CodeMetricsRunner for each provider, to send metadata information
            </summary>
            <param name="name">Metadata name</param>
            <param name="value">Metadata value</param>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.IMultiFileCodeMetricsProvider">
            <summary>
            This interface should be implemented for providers that needs to compute metrics for a set of files.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.IMultiFileCodeMetricsProvider.ComputeMetrics(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Called from CodeMetricsRunner. Computes the metrics
            </summary>
            <param name="metricsToCompute">Each item in the list is a metric to compute.</param>
            <param name="files">The list of files that will have its metrics computed.</param>
            <returns>a set of measures</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.IProcessExecutor">
            <summary>
            Interface for ProcessExecutor (utility class to execute external processes).
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.IProcessExecutor.ExecuteProcess(System.String,System.String)">
            <summary>
            Executes an external process, assuming current assembly dir, the working dir.
            </summary>
            <param name="executable"></param>
            <param name="arguments"></param>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.IProcessExecutorCodeMetricsProvider">
            <summary>
            Interface to be implemented by providers that wants IProcessExecutor to be injected.
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.IProcessExecutorCodeMetricsProvider.ProcessExecutor">
            <summary>
            Setter for process executor
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ISingleFileCodeMetricsProvider">
            <summary>
            This interface must be implemented for providers that need to compute metric file by file (not on a set of files)
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ISingleFileCodeMetricsProvider.ComputeMetrics(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Called from CodeMetricsRunner. Computes the metrics.
            </summary>
            <param name="metricsToCompute">Each item in the list is a metric to compute</param>
            <param name="fileName">The file that will have its metrics extracted</param>
            <returns>a set of measures</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.MetricList">
            <summary>
            This class is just a builder for List&lt;Metric&gt;. Syntax sugar.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.MetricList.Create">
            <summary>
            Creates a new MetricList and return its reference
            </summary>
            <returns>The new MetricList</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.MetricList.Add(System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Adds a new Metric to the list and returs the list.
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <param name="range">Range</param>
            <returns>The metric list</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.MetricList.Add(System.String,System.String)">
            <summary>
            Adds a new Metric to the list and returs the list.
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <returns>The metric list</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.NamespaceDoc">
            <summary>
            This namespace is the core MSBuildCodeMetrics classes. All other assemblies depends on this one. Most of the classes
            are abstract and don't provide any concrete implementation for the metrics. 
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ProcessExecutor">
            <summary>
            Utility class to execute external processes
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ProcessExecutor.#ctor(MSBuildCodeMetrics.Core.ILogger)">
            <summary>
            Creates new Process Executor instance
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ProcessExecutor.ExecuteProcess(System.String,System.String)">
            <summary>
            Executes an external executable. Assumes current executing assembly path as working dir and throws exception on fail.
            Logs stdout as messages on logger and stderr as errors on logger.
            </summary>
            <param name="executable">Full path of executable</param>
            <param name="arguments">All the arguments as a string</param>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.ProviderMeasure">
            <summary>
            This class represents one measure generated by one code metrics provider. 
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.ProviderMeasure.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Creates a new provider measure
            </summary>
            <param name="metricName">The metric</param>
            <param name="itemName">The measure or item</param>
            <param name="value">The value</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ProviderMeasure.MetricName">
            <summary>
            The metric name
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ProviderMeasure.MeasureName">
            <summary>
            The measure name. The item that have had its measure computed.
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.ProviderMeasure.Value">
            <summary>
            The value of the measure
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.RangeList">
            <summary>
            This class is just a Builder for List&lt;int&gt;. Syntax sugar.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.RangeList.Create">
            <summary>
            Creates a new RangeList instance and returns it
            </summary>
            <returns>The new range list</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.RangeList.Add(System.Int32)">
            <summary>
            Adds a new range.
            </summary>
            <param name="range">The range</param>
            <returns>Range list</returns>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.Metric">
            <summary>
            This class is used as parameter in the reports. Each Metric has the input information needed to generate the reports.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.Metric.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Creates a new metric
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <param name="range">The ranges (ex: 10, 5)</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Metric.ProviderName">
            <summary>
            The name of the provider
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Metric.MetricName">
            <summary>
            The metric name
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Metric.Range">
            <summary>
            The ranges. Example: if 10 and 5 is specified, the following ranges will be computed: x &gt; 10, 10 &gt;= x &gt; 5, x &lt; 5
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.Ranges.NamespaceDoc">
            <summary>
            This namespace contains classes to represent Ranges in the summary report.
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.RunnerMeasure">
            <summary>
            This class represent one measure from the Runner perspective. It also includes the provider for each metric.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.RunnerMeasure.#ctor(System.String,MSBuildCodeMetrics.Core.ProviderMeasure)">
            <summary>
            Creates a new runner measure
            </summary>
            <param name="providerName">The name of the provider</param>
            <param name="providerMeasure">The provider measure that originated this runner measure</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.RunnerMeasure.ProviderName">
            <summary>
            The provider that generated this measure
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.RunnerMeasure.MetricName">
            <summary>
            Name of the metric
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.RunnerMeasure.MeasureName">
            <summary>
            Name of the measure or item.
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.RunnerMeasure.Value">
            <summary>
            The value of the measure or item
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.Ranges.BetweenUpperAndLowerRangeType">
            <summary>
            This class represents the inner range of summary reports.
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.Ranges.IRangeType">
            <summary>
            This interface is an abstraction for Ranges used in the summary report.
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.IRangeType.Name">
            <summary>
            The name of the range, readable by humans
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.Ranges.BetweenUpperAndLowerRangeType.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new range
            </summary>
            <param name="upperValue">Upper value</param>
            <param name="lowerValue">Lower value</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.BetweenUpperAndLowerRangeType.Name">
            <summary>
            Name of the range, readable by humans
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.BetweenUpperAndLowerRangeType.UpperValue">
            <summary>
            The upper value of the range
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.BetweenUpperAndLowerRangeType.LowerValue">
            <summary>
            The lower value of the range
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.Ranges.GreaterThanRangeType">
            <summary>
            This class is used to represent the greater range in the summary report.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.Ranges.GreaterThanRangeType.#ctor(System.Int32)">
            <summary>
            Creates a new range
            </summary>
            <param name="value">value</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.GreaterThanRangeType.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.GreaterThanRangeType.Name">
            <summary>
            The name of this range, readable by humans.
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.Ranges.LowerOrEqualRangeType">
            <summary>
            This class represents the lower range of the summary report.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.Ranges.LowerOrEqualRangeType.#ctor(System.Int32)">
            <summary>
            Creates a new range
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.LowerOrEqualRangeType.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.Ranges.LowerOrEqualRangeType.Name">
            <summary>
            The name of the range, readable by humans
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport">
            <summary>
            This class represents the XML output report. This is used only for XML serialization purpose.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.Create">
            <summary>
            Creates a new report.
            </summary>
            <returns>The new report</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.CreateSummary">
            <summary>
            Creates a new SummaryReport and hooks the Summary property.
            </summary>
            <returns>the new SummaryReport</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.CreateDetails">
            <summary>
            Creates a new DetailsReport and hooks the Details property.
            </summary>
            <returns>The new details section</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.SerializeToMemoryStream(System.Boolean)">
            <summary>
            Serialize this report to a new memory stream.
            </summary>
            <param name="seekToBegin">True if you want the stream in its start position</param>
            <returns>The new memory stream</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes the report
            </summary>
            <param name="stream">Stream</param>
            <returns>a new MSBuildCodeMetricsReport</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.Serialize(System.IO.Stream)">
            <summary>
            Serializes the report.
            </summary>
            <param name="outputStream">The output stream</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.Summary">
            <summary>
            The summary section of the report
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport.Details">
            <summary>
            The details section of the report
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.XML.DetailsReport">
            <summary>
            This class represent the Details section of the report XML. This is used only for XML serialization purpose.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.DetailsReport.AddMetric(System.String,System.String)">
            <summary>
            Creates a new metric, adds it to the report and return the reference of the new metric.
            </summary>
            <param name="providerName">The provider name</param>
            <param name="metricName">The metric name</param>
            <returns>The metric report</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.DetailsReport.#ctor">
            <summary>
            Creates a new details report
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.DetailsReport.#ctor(MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport)">
            <summary>
            Creates a new details report and hooks the parent report.
            </summary>
            <param name="report">The parent report</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.DetailsReport.Report">
            <summary>
            The parent report
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.DetailsReport.Metrics">
            <summary>
            The metrics
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.XML.MeasureReport">
            <summary>
            This class represents a measure in XML report. This is used only for XML serialization purpose.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MeasureReport.#ctor">
            <summary>
            Creates a new MeasureReport
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MeasureReport.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new MeasureReport
            </summary>
            <param name="measureName">Measure name</param>
            <param name="value">Value</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MeasureReport.MeasureName">
            <summary>
            Measure name
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MeasureReport.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.XML.MetricReport">
            <summary>
            This class represent a metric in XML report. This is used only for XML serialization purpose.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MetricReport.#ctor">
            <summary>
            Creates a new MetricReport
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MetricReport.#ctor(System.String,System.String)">
            <summary>
            Creates a new MetricReport
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MetricReport.CreateRanges">
            <summary>
            Create a new SummaryRangeReport and hooks the Ranges property
            </summary>
            <returns>the report</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MetricReport.AddRange(System.String,System.Int32)">
            <summary>
            Create a new SummaryRangeReport and adds it to the Ranges property
            </summary>
            <param name="rangeName">Range name</param>
            <param name="count">count</param>
            <returns>the report</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MetricReport.CreateMeasures">
            <summary>
            Create a new list of MeasureReport and hooks the Measures property
            </summary>
            <returns>the report</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.MetricReport.AddMeasure(System.String,System.Int32)">
            <summary>
            Create a new MetricReport and add it to the Measures list
            </summary>
            <param name="measureName">Measure name</param>
            <param name="value">Value</param>
            <returns>The new metric report</returns>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MetricReport.ProviderName">
            <summary>
            Provider name
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MetricReport.MetricName">
            <summary>
            Metric name
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MetricReport.Ranges">
            <summary>
            Ranges of the report
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.MetricReport.Measures">
            <summary>
            Measures
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.XML.NamespaceDoc">
            <summary>
            This namespace contains classes used for serialization of MSBuildCodeMetrics reports.
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.XML.SummaryRangeReport">
            <summary>
            This class represents a Range in XML report. This is used only for XML serialization purpose.
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.SummaryRangeReport.#ctor">
            <summary>
            Creates a new SummaryRangeReport
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.SummaryRangeReport.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new SummaryRangeReport
            </summary>
            <param name="rangeName">Range name</param>
            <param name="count">Count</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.SummaryRangeReport.Name">
            <summary>
            Name of the range
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.SummaryRangeReport.Count">
            <summary>
            Count of measures in this range
            </summary>
        </member>
        <member name="T:MSBuildCodeMetrics.Core.XML.SummaryReport">
            <summary>
            This class represents the Summary section of the XML report. This class is used only for XML serialization purposes. 
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.SummaryReport.AddMetric(System.String,System.String)">
            <summary>
            Adds a new metric and returns the metric
            </summary>
            <param name="providerName">Provider name</param>
            <param name="metricName">Metric name</param>
            <returns>The new metric</returns>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.SummaryReport.#ctor">
            <summary>
            Creates a new summary report
            </summary>
        </member>
        <member name="M:MSBuildCodeMetrics.Core.XML.SummaryReport.#ctor(MSBuildCodeMetrics.Core.XML.MSBuildCodeMetricsReport)">
            <summary>
            Creates a new summary report and hooks the parent report
            </summary>
            <param name="report">The parent report</param>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.SummaryReport.Metrics">
            <summary>
            The metrics of the report.
            </summary>
        </member>
        <member name="P:MSBuildCodeMetrics.Core.XML.SummaryReport.Report">
            <summary>
            The parent report
            </summary>
        </member>
    </members>
</doc>
